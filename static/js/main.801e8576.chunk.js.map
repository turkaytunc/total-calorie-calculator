{"version":3,"sources":["util/initialState.js","components/input-renderer/InputRenderer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["initialState","gender","age","height","weight","activity","InputRenderer","useState","mesurements","setMesurements","handleGenderChange","e","target","value","className","htmlFor","checked","type","name","id","onChange","max","min","handleAgeChange","handleHeightChange","handleWeightChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAAaA,EAAe,CAC1BC,OAAQ,OACRC,IAAK,GACLC,OAAQ,IACRC,OAAQ,GACRC,SAAU,ICDCC,G,MAAgB,WAAO,IAAD,EACKC,mBAASP,GADd,mBAC1BQ,EAD0B,KACbC,EADa,KAG3BC,EAAqB,SAACC,GAAD,OACzBF,EAAe,2BAAKD,GAAN,IAAmBP,OAAQU,EAAEC,OAAOC,UAUpD,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBAAOC,QAAQ,gBAAgBD,UAAU,oBAAzC,oBAGA,uBAAOC,QAAQ,MAAMD,UAAU,oBAA/B,iBAGA,uBAAOC,QAAQ,SAASD,UAAU,oBAAlC,oBAGA,uBAAOC,QAAQ,SAASD,UAAU,oBAAlC,uBAIF,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,wBAAOC,QAAQ,cAAf,iBAEE,uBACED,UAAU,eACVE,QAAgC,SAAvBR,EAAYP,OACrBY,MAAM,OACNI,KAAK,QACLC,KAAK,SACLC,GAAG,cACHC,SAAU,SAACT,GAAD,OAAOD,EAAmBC,SAGxC,wBAAOI,QAAQ,gBAAf,mBAEE,uBACED,UAAU,eACVE,QAAgC,WAAvBR,EAAYP,OACrBY,MAAM,SACNI,KAAK,QACLC,KAAK,SACLC,GAAG,gBACHC,SAAU,SAACT,GAAD,OAAOD,EAAmBC,YAK1C,uBACEU,IAAK,GACLC,IAAK,GACLL,KAAK,SACLH,UAAU,wBACVD,MAAOL,EAAYN,IACnBkB,SAAU,SAACT,GAAD,OA1DM,SAACA,GAAD,OACtBF,EAAe,2BAAKD,GAAN,IAAmBN,IAAKS,EAAEC,OAAOC,SAyDxBU,CAAgBZ,MAEnC,uBACEU,IAAK,IACLC,IAAK,IACLL,KAAK,SACLH,UAAU,2BACVD,MAAOL,EAAYL,OACnBiB,SAAU,SAACT,GAAD,OA/DS,SAACA,GAAD,OACzBF,EAAe,2BAAKD,GAAN,IAAmBL,OAAQQ,EAAEC,OAAOC,SA8D3BW,CAAmBb,MAEtC,uBACEU,IAAK,IACLC,IAAK,GACLL,KAAK,SACLH,UAAU,2BACVD,MAAOL,EAAYJ,OACnBgB,SAAU,SAACT,GAAD,OArES,SAACA,GAAD,OACzBF,EAAe,2BAAKD,GAAN,IAAmBJ,OAAQO,EAAEC,OAAOC,SAoE3BY,CAAmBd,cCxE/Be,MATf,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,8DACA,cAAC,EAAD,QCKSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.801e8576.chunk.js","sourcesContent":["export const initialState = {\n  gender: 'male',\n  age: 25,\n  height: 180,\n  weight: 80,\n  activity: '',\n};\n","import React, { useState } from 'react';\nimport { initialState } from '../../util/initialState';\nimport './input-renderer.scss';\n\nexport const InputRenderer = () => {\n  const [mesurements, setMesurements] = useState(initialState);\n\n  const handleGenderChange = (e) =>\n    setMesurements({ ...mesurements, gender: e.target.value });\n\n  const handleAgeChange = (e) =>\n    setMesurements({ ...mesurements, age: e.target.value });\n\n  const handleHeightChange = (e) =>\n    setMesurements({ ...mesurements, height: e.target.value });\n  const handleWeightChange = (e) =>\n    setMesurements({ ...mesurements, weight: e.target.value });\n\n  return (\n    <div className=\"container\">\n      <div className=\"label-container\">\n        <label htmlFor=\"select-gender\" className=\"mesurements-label\">\n          Gender\n        </label>\n        <label htmlFor=\"age\" className=\"mesurements-label\">\n          Age\n        </label>\n        <label htmlFor=\"height\" className=\"mesurements-label\">\n          Height\n        </label>\n        <label htmlFor=\"weight\" className=\"mesurements-label\">\n          Weight\n        </label>\n      </div>\n      <div className=\"input-container\">\n        <div className=\"select-gender\">\n          <label htmlFor=\"gender-male\">\n            Male\n            <input\n              className=\"gender-input\"\n              checked={mesurements.gender === 'male'}\n              value=\"male\"\n              type=\"radio\"\n              name=\"gender\"\n              id=\"gender-male\"\n              onChange={(e) => handleGenderChange(e)}\n            />\n          </label>\n          <label htmlFor=\"gender-female\">\n            Female\n            <input\n              className=\"gender-input\"\n              checked={mesurements.gender === 'female'}\n              value=\"female\"\n              type=\"radio\"\n              name=\"gender\"\n              id=\"gender-female\"\n              onChange={(e) => handleGenderChange(e)}\n            />\n          </label>\n        </div>\n\n        <input\n          max={20}\n          min={15}\n          type=\"number\"\n          className=\"select-age input-item\"\n          value={mesurements.age}\n          onChange={(e) => handleAgeChange(e)}\n        />\n        <input\n          max={220}\n          min={100}\n          type=\"number\"\n          className=\"select-height input-item\"\n          value={mesurements.height}\n          onChange={(e) => handleHeightChange(e)}\n        />\n        <input\n          max={200}\n          min={30}\n          type=\"number\"\n          className=\"select-weight input-item\"\n          value={mesurements.weight}\n          onChange={(e) => handleWeightChange(e)}\n        />\n      </div>\n    </div>\n  );\n};\n","import './app.scss';\nimport { InputRenderer } from './components/input-renderer/InputRenderer';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header>Total Calorie Calculator</header>\n      <InputRenderer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}